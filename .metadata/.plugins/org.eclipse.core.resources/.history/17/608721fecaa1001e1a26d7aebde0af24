import java.util.ArrayList;

public class Account {

    /**
     * The name of account
     */
    private String name;

    /**
     * Account ID number
     */
    private String uuid;

    /**
     * User object that holds the Account
     */
    private User holder;

    /**
     * List of transactions for this account
     */
    private ArrayList<Transaction> transactions;

    /**
     * Account constructor
     *
     * @param name
     *            the name of the account
     * @param theHolder
     *            the User object that holds this account
     * @param theBank
     *            the bank that issues the account
     */
    public Account(String name, User theHolder, Bank theBank) {

        // name and holder
        this.name = name;
        this.holder = theHolder;

        // new UUID
        this.uuid = theBank.getNewAccountUUID();

        // initialize transaction List
        this.transactions = new ArrayList<Transaction>();

    }

    /**
     * Get a summary line for Account
     *
     * @return string summary
     */
    public String getSummaryLine() {

        // get the account's balance
        double balance = this.getBalance();

        //format summary line, red if negative
        if ((balance >= 0)) {
            return String.format("%s : $%02f: %s", this.uuid, balance,
                    this.name);
        } else {
            return String.format("%s : $(%02f): %s", this.uuid, balance,
                    this.name);

        }
    }

    /**
     * Get the balance of this account by adding the amounts of transactions
     *
     * @return the balance value of account
     */
    public double getBalance() {
        double balance = 0;
        for (Transaction t : this.transactions) {
            balance += t.getAmount();
        }

        return balance;
    }

    /**
     * print transaction history
     */
    public void printTransHistory() {
        System.out.printf("\nTransaction history for account %s\n", this.uuid);
        for (int i = this.transactions.size() - 1; i >= 0; i--) {
            System.out.printf(this.transactions.get(i).getSummaryLine(), null);
        }
    }

    /**
     * add a transaction to the account list
     *
     * @param amount
     *            transferred amount
     * @param memo
     *            reason for transaction
     */
    public void addTransaction(double amount, String memo) {
        // new Transaction object
        Transaction newTrans = new Transaction(amount, memo, this);
        this.transactions.add(newTrans);
    }

    // getters and setters
    /**
     * account UUID
     *
     * @return uuid
     */
    public String getUUID() {
        return this.uuid;
    }

}