import java.util.Scanner;

public class ATM {
    public static void main(String[] args) {
        // init Scanner
        Scanner sc = new Scanner(System.in);

        boolean flag = false;
        while (flag == false) {
            System.out.println("Are you an existing customer or a new customer? If existing, enter 1 and if new, enter 2");
            String nextLine = sc.nextLine();
            if (nextLine.equals(2)) {
                //init Bank
                System.out.println("What bank would you like to access?");
                String s = sc.nextLine();
                Bank theBank = new Bank(s);

                // add User
                System.out.println("What is your first name?");
                String firstName = sc.nextLine();

                System.out.println("What is your last name?");
                String lastName = sc.nextLine();

                System.out.println("Input your pin: ");
                String pin = sc.nextLine();

                User newUser = theBank.addUser(firstName, lastName, pin);

                Account newAccount = new Account("Checking", newUser, theBank);
                newUser.addAccount(newAccount);
                theBank.addAccount(newAccount);
                flag = true;

            } else if (nextLine.equals(1) ) {
                
                flag = true;
            } else {
                System.out.println("You did not enter a valid input, please try again!");
            }
            
            }
        
        User curUser;
        while (true) {
            //login prompt to stay until successful login
            curUser = ATM.mainMenuPrompt(theBank, sc);
            
            // main menu until quit
            ATM.printUserMenu(curUser, sc);
        }

        }
    /**
     *create a prompt once you access the ATM
     * @param theBank which bank you're at
     * @param sc output stream
     * @return return use object if pin/ID combo is correct
     */
    public static User mainMenuPrompt (Bank theBank, Scanner sc) {
        
        //inits 
        String userID;
        String pin;
        User authUser;
        
        // prompt user for user pin ID combo until received
        do {
            System.out.printf("\n\nWelcome to %s\n\n", theBank.getName());
            System.out.print("Enter user ID: ");
            userID = sc.nextLine();
            System.out.print("Enter pin: ");
            pin = sc.nextLine();
            
            authUser = theBank.userLogin(userID, pin);
            if (authUser == null) {
                System.out.println("Incorrect user ID/pin combination. "
                        + "Please try Again.");
            }
        } while (authUser == null);
            
        return authUser;
        
    }
    
    /**
     * outputs a user menu
     * @param theUser current person using ATM
     * @param sc output stream
     */
    public static void printUserMenu(User theUser, Scanner sc) {
        //print a summary of user's account
        theUser.printAccountsSummary();
        
        // init
        int choice;
        
        // user menu
        do {
            System.out.printf("Welcome %s, what would you like to do?", theUser.getFirstName());
            System.out.println(" 1) Show account history");
            System.out.println(" 2) Make a Withdrawal");
            System.out.println(" 3) Make a Deposit");
            System.out.println(" 4) Transfer");
            System.out.println(" 5) Quit");
            System.out.println();
            System.out.println("Enter choice: ");
            choice = sc.nextInt();
            
            if (choice < 1 || choice > 5) {
                System.out.println("Invalid input: Please choose 1-5");
            }
        }while (choice < 1 || choice > 5);
        switch (choice) {
            case 1:
                ATM.showTransHistory(theUser, sc);
                break;
            case 2:
                ATM.withdrawFunds(theUser, sc);
                break;
            case 3:
                ATM.transferFunds(theUser, sc);
                break;
            case 4:
                ATM.transferFunds(theUser, sc);
                break;
        } 
        
        // redisplay method using recursion
        
        if (choice != 5) {
            ATM.printUserMenu(theUser, sc);
        }
    }


    public static void printAccountsSummary(theUser, sc) {
        
    }

 
}