import java.util.Date;

public class Transaction {
    
    /**
     * Value of transaction
     */
    private double amount;
    
    /**
     * Time transaction was conducted
     */
    private Date timeStamp;
    
    /**
     * Memo for this transaction
     */
    private String memo;
    
    /**
     * The account in which transaction was performed
     */
    private Account inAccount;
    
    /**
     * create a transaction 
     * @param theAmount value of Transaction
     * @param newAccount Account interacted with
     */
    public Transaction(double theAmount, Account newAccount) {
        this.amount = theAmount;
        //automatically creates new Date object with current time of transaction
        this.timeStamp = new Date();
        this.inAccount = newAccount;
        
    }
    /**
     * create a transaction
     * @param theAmount value of transaction
     * @param newMemo Reason for transaction
     * @param newAccount account interacted with 
     */
    public Transaction(double theAmount, String newMemo, Account newAccount) {
        
        this(theAmount, newAccount);
        this.memo = newMemo;
        
    }
    
    
    //getters and setters
    
    /**
     * 
     * @return amount
     */
    public double getAmount() {
        return amount;
    }

    /**
     * 
     * @return the date
     */
    public Date getTimeStamp() {
        return timeStamp;
    }

    /**
     * 
     * @return the memo
     */
    public String getMemo() {
        return memo;
    }

    /**
     * 
     * @return account associated with transaction
     */
    public Account getInAccount() {
        return inAccount;
    }
    
    public void deposit()

}